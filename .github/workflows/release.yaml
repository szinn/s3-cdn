---
name: "Release: s3-cdn"

on:
  workflow_dispatch:
    # inputs:
    #   version:
    #     description: Version to build
    #     default: "latest"
    #     required: true
  push:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    name: Build s3-cdn
    runs-on: ubuntu-latest
    steps:
      - name: Setup Tools
        shell: bash
        run: |
          sudo apt-get -qq update && \
          sudo apt-get -qq install --no-install-recommends -y curl unzip gcc g++ git

      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          fetch-depth: 1

      - name: Login to GHCR
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PASSWORD }}

      - name: Setup workflow Variables
        id: vars
        shell: bash
        run: |-
          VERSION="latest"
          if test "$GITHUB_EVENT_NAME" == "workflow_dispatch"; then
            VERSION=$(cat VERSION)
          fi
          echo "::set-output name=version::$VERSION"
          echo "::set-output name=tag_version::s3-cdn:$VERSION"

      # - name: Setup QEMU
      #   uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3.3.0

      - name: Build container image
        uses: docker/build-push-action@1a162644f9a7e87d8f4b053101d1d9a712edc18c # v6
        with:
          build-args: |-
            VERSION=${{ steps.vars.outputs.version }}
          context: .
          platforms: linux/amd64 # load does not support muti-arch https://github.com/docker/buildx/issues/290
          file: Dockerfile
          push: true
          tags: |-
            ghcr.io/${{ github.repository_owner }}/${{ steps.vars.outputs.tag_version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
