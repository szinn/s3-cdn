name: test

on:
  push:
    branches: [main]
  pull_request:

# Spend CI time only on latest ref: https://github.com/jonhoo/rust-ci-conf/pull/5
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  required:
    runs-on: ubuntu-latest
    name: ubuntu / ${{ matrix.toolchain }}
    strategy:
      matrix:
        # toolchain: [stable, beta]
        toolchain: [stable]
    steps:
      - name: Setup Tools
        shell: bash
        run: |
          sudo apt-get -qq update && \
          sudo apt-get -qq install --no-install-recommends -y curl unzip gcc g++ git
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4
        with:
          submodules: false
      - name: Install ${{ matrix.toolchain }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      # https://twitter.com/jonhoo/status/1571290371124260865
      - name: cargo test --locked
        run: cargo test --locked --all-features --all-targets
      # https://github.com/rust-lang/cargo/issues/6669
      - name: cargo test --doc
        run: cargo test --locked --all-features --doc
  # minimal:
  #   name: ubuntu / stable / minimal-versions
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         submodules: true
  #     - name: Install stable
  #       uses: dtolnay/rust-toolchain@stable
  #     # - name: Install nightly for -Zminimal-versions
  #     #   uses: dtolnay/rust-toolchain@nightly
  #     - name: rustup default stable
  #       run: rustup default stable
  #     # - name: cargo update -Zminimal-versions
  #     #   run: cargo +nightly update -Zminimal-versions
  #     - name: cargo test
  #       run: cargo test --locked --all-features --all-targets
  # os-check:
  #   runs-on: ${{ matrix.os }}
  #   name: ${{ matrix.os }} / stable
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       # os: [macos-latest, windows-latest]
  #       os: [macos-latest]
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         submodules: true
  #     - name: Install stable
  #       uses: dtolnay/rust-toolchain@stable
  #     - name: cargo generate-lockfile
  #       if: hashFiles('Cargo.lock') == ''
  #       run: cargo generate-lockfile
  #     - name: cargo test
  #       run: cargo test --locked --all-features --all-targets
  # coverage:
  #   name: ubuntu / stable / coverage
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         submodules: true
  #     - name: Install stable
  #       uses: dtolnay/rust-toolchain@stable
  #       with:
  #         components: llvm-tools-preview
  #     - name: cargo install cargo-llvm-cov
  #       uses: taiki-e/install-action@cargo-llvm-cov
  #     - name: cargo generate-lockfile
  #       if: hashFiles('Cargo.lock') == ''
  #       run: cargo generate-lockfile
  #     - name: cargo llvm-cov
  #       run: cargo llvm-cov --locked --all-features --lcov --output-path lcov.info
  #     - name: Upload to codecov.io
  #       uses: codecov/codecov-action@v3
  #       env:
  #         CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  #       with:
  #         fail_ci_if_error: true
